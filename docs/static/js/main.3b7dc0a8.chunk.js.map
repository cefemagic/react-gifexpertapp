{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GitExpertApp","Categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAqB9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEFC,QAAQC,IAAI,GAGRN,EAAWO,OAAOC,OAAS,IAC3BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,MAIlB,SACI,uBACIS,KAAK,OACLC,MAAQX,EACRY,SAtBc,SAACT,GAGvBF,EAAcE,EAAEU,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,0DAEmCC,UAAUH,GAF7C,sDAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIIA,EAAUC,OAJd,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCHCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAXAC,qBAAW,WACPxB,EAAQC,GACPwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAGtB,CAACpB,IAEGqB,EDfwBK,CAAa1B,GAAjCa,EAF0B,EAE/BN,KAAaa,EAFkB,EAElBA,QAarB,OACI,qCACA,mCAAMpB,EAAN,OAEDoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAEKH,EAAOJ,KAAI,SAAEC,GAAF,OACV,cAAC,EAAD,eAEOA,GADAA,EAAIC,aEzBRgB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,SAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAS9B,OACQ,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWnB,KAAI,SAACT,GAAD,OACP,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCjBrC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3b7dc0a8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'; \r\n\r\nexport const AddCategory = ( { setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) =>{\r\n\r\n       // console.log(e.target.value)\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log('submit hecho')\r\n        console.log(1)\r\n        //setCategories([...Categories,'piue'])\r\n\r\n        if (inputValue.trim().length > 0){\r\n            setCategories(cats => [inputValue, ...cats])\r\n            setinputValue('')\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue}\r\n                onChange={ handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async ( category ) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI(category) }&api_key=lyhpZo0KxkQZGNWvPvnNYCwtBYl7Isvi`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    //console.log(gifs);\r\n\r\n    return gifs\r\n  };","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    //console.log(id,title,url)\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n//import { getGifs } from \"../helpers/getGifs\";\r\nimport {GifGridItem} from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  \r\n  const { data:images, loading } = useFetchGifs(category);\r\n  //console.log( data, loading);\r\n/*   const [images, setimages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n        .then(setimages)\r\n  }, [ category ]);\r\n */\r\n  \r\n\r\n  //getGifs();\r\n\r\n  return (\r\n      <>\r\n      <h3> {category} </h3>\r\n\r\n    {loading && <p>Loading</p>}\r\n    <div className=\"card-grid\">\r\n      \r\n        {images.map(( img ) => (\r\n          <GifGridItem \r\n            key={img.id}\r\n            { ...img }\r\n            />\r\n        ))}\r\n    \r\n    </div>\r\n    </>\r\n  );\r\n};\r\n","import {useEffect, useState} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n        \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n        .then(imgs => {\r\n\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                });\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import { useState } from \"react\"\r\nimport {AddCategory} from './components/AddCategory'\r\nimport { GifGrid } from \"./components/GifGrid\"\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n    const [Categories, setCategories] = useState(['Peru'])\r\n\r\n   /*  const handleAdd = () =>{\r\n        //setCategories( [...Categories, 'Colombia'])\r\n        setCategories(cats => [...cats, 'Bolivia'])\r\n    } */\r\n\r\n    return (\r\n            <>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            <ul>\r\n                {\r\n                    Categories.map((category) => (\r\n                            <GifGrid \r\n                                key={category}\r\n                                category={category}\r\n                            />\r\n                    ))\r\n                }\r\n            </ul>\r\n            </>\r\n    )\r\n}\r\n\r\n//export default GitExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GitExpertApp} from './GitExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}